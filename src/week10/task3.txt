Строка ABCABCDEDEDEF содержит подстроку ABC, повторяющуюся два раза подряд, и подстроку DE, повторяющуюся
три раза подряд. Таким образом, ее можно записать как ABC*2+DE*3+F, что занимает меньше места, чем исходная запись
 той же строки.

Ваша задача - построить наиболее экономное представление данной строки s в виде, продемонстрированном выше, а именно,
 подобрать такие s1,a1,...,sk,ak, где si - строки, а ai - числа, чтобы s=s1*a1+...+sk*ak. Под операцией умножения строки на целое положительное число
 подразумевается конкатенация одной или нескольких копий строки, число которых равно числовому множителю, то есть,
 ABC*2=ABCABC. При этом требуется минимизировать общую длину итогового описания, в котором компоненты разделяются
 знаком +, а умножение строки на число записывается как умножаемая строка и множитель, разделенные знаком *. Если
 же множитель равен единице, его, вместе со знаком *, допускается не указывать.

Формат входного файла
Первая строка входного файла содержит s(1<=|s|<=5*10^3). Строка состоит из букв латинского алфавита.

Формат выходного файла
Выведите оптимальное представление строки, данной во входном файле. Если оптимальных представлений несколько, выведите
 любое.

input.txt
ABCABCDEDEDEF
Hello

output.txt
ABC*2+DE*3+F
Hello
